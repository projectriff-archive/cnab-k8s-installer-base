# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.11' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

steps:
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    shopt -s dotglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'

- script: |
    go version
    make
  workingDirectory: '$(modulePath)'
  displayName: 'Get dependencies, then build'

- script: |
    curl -Lo minikube https://storage.googleapis.com/minikube/releases/v1.0.0/minikube-linux-amd64 && chmod +x minikube && sudo cp minikube /usr/local/bin/ && rm minikube
    minikube start --memory=8192 --cpus=4 \
    --kubernetes-version=v1.13.2 \
    --bootstrapper=kubeadm \
    --vm-driver=none \
    --extra-config=apiserver.enable-admission-plugins="LimitRanger,NamespaceExists,NamespaceLifecycle,ResourceQuota,ServiceAccount,DefaultStorageClass,MutatingAdmissionWebhook" \
    --insecure-registry registry.pfs.svc.cluster.local:5000
  displayName: 'start minikube'

- script: |
    docker run -d -p 5000:5000 --restart=always --volume ~/.registry/storage:/var/lib/registry registry:2
    sudo sed -i 's/127.0.0.1\slocalhost/127.0.0.1     localhost registry.pfs.svc.cluster.local/g' /etc/hosts
  displayName: 'setup registry'

- script: |
    git clone git@github.com:projectriff/cnab-riff.git
  workingDirectory: '$(modulePath)/..'
  displayName: 'clone cnab-riff'

- script: |
    export CNAB_ACTION=install
    export TARGET_REGISTRY=registry.pfs.svc.cluster.local:5000
    ./cnab/app/run ../cnab-riff/cnab/app/kab/template.yaml
  workingDirectory: '$(modulePath)'
  displayName: 'run install'
